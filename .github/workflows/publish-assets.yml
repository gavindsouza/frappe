name: 'Build'

on:
  push:
    branches: [ develop ]
  release:
    types: [ released ]

jobs:
  build-assets-and-publish:
    name: 'Publish Static Assets'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          path: 'frappe'

      - uses: actions/setup-node@v1
        with:
          node-version: 14

      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Set up bench and build assets
        run: |
          npm install -g yarn
          pip3 install -U frappe-bench
          bench init frappe-bench --no-procfile --no-backups --skip-assets --skip-redis-config-generation --python $(which python) --frappe-path $GITHUB_WORKSPACE/frappe
          cd frappe-bench && bench build

      - name: Package assets
        run: |
          mkdir -p $GITHUB_WORKSPACE/build
          tar -cvpzf $GITHUB_WORKSPACE/build/$GITHUB_SHA.tar.gz ./frappe-bench/sites/assets/frappe/dist

      - name: Publish assets to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read
        env:
          AWS_S3_BUCKET: 'assets.frappeframework.com'
          AWS_ACCESS_KEY_ID: ${{ secrets.S3_ASSETS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_ASSETS_SECRET_ACCESS_KEY }}
          AWS_S3_ENDPOINT: 'http://s3.fr-par.scw.cloud'
          AWS_REGION: 'fr-par'
          SOURCE_DIR: '$GITHUB_WORKSPACE/build'
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'

      - id: get_release
        uses: bruceadams/get-release@v1.2.0

      - name: Upload built Assets to Release
        uses: actions/upload-release-asset@v1.0.2
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: build/assets.tar.gz
          asset_name: assets.tar.gz
          asset_content_type: application/octet-stream
        if: github.event_name == 'release'

  docker-release:
    name: 'Publish Container Image'
    runs-on: ubuntu-latest
    container:
      image: alpine:latest

    steps:
      - name: curl
        run: |
          apk add curl bash
          curl -X POST -H "Accept: application/vnd.github.v3+json" -H "Authorization: Bearer ${{ secrets.CI_PAT }}" https://api.github.com/repos/frappe/frappe_docker/actions/workflows/build_stable.yml/dispatches -d '{"ref":"main"}'

    if: github.event_name == 'release'
